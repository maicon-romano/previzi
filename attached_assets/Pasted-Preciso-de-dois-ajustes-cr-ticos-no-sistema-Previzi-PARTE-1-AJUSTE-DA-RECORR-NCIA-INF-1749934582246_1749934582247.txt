Preciso de dois ajustes cr√≠ticos no sistema Previzi:

---

üü¢ PARTE 1: AJUSTE DA RECORR√äNCIA INFINITA (Erro: Est√° limitando a 12 meses)

**Problema atual:**  
Ao criar uma nova transa√ß√£o marcada como "recorrente infinita", o sistema est√° gerando as transa√ß√µes apenas para os pr√≥ximos 12 meses.  
Depois disso, a transa√ß√£o n√£o aparece mais nos meses futuros.

‚úÖ O que fazer:

- Corrigir a l√≥gica de cria√ß√£o de transa√ß√µes recorrentes infinitas.
- A aplica√ß√£o N√ÉO deve criar as transa√ß√µes futuras todas de uma vez (isso n√£o escala).  
- Em vez disso, a aplica√ß√£o deve adotar a seguinte estrat√©gia:

**Nova L√≥gica Recomendada:**  
Ao abrir qualquer m√™s futuro, o sistema deve:

1. Verificar se existem transa√ß√µes daquele m√™s.
2. Caso a transa√ß√£o seja marcada como `recurring: true` e `recurringType: "infinite"`,  
mas ainda **n√£o exista no m√™s em quest√£o**,  
üëâ a aplica√ß√£o deve **gerar dinamicamente aquela transa√ß√£o para o m√™s acessado**.

Essa l√≥gica pode rodar:

- No `onSnapshot()` de leitura por m√™s  
**OU**  
- Num efeito (`useEffect`) sempre que o usu√°rio mudar o m√™s selecionado.

---

üü¢ PARTE 2: RESET AUTOM√ÅTICO DO FORMUL√ÅRIO DE NOVA TRANSA√á√ÉO

**Problema atual:**  
Ao abrir o modal de "Nova Transa√ß√£o" para adicionar uma nova, os campos est√£o sendo carregados com os valores da √∫ltima transa√ß√£o criada (exemplo: o valor anterior ainda aparece no campo).

‚úÖ O que fazer:

- Garantir que, ao abrir o **AddTransactionModal**, os campos do formul√°rio sejam **resetados automaticamente para valores vazios/defaults**.

‚úÖ Exemplo de reset:

Ao abrir o modal:

```ts
useEffect(() => {
  if (isOpen) {
    setFormData({
      description: "",
      amount: "",
      category: "",
      date: new Date(),
      type: "expense",
      status: "pending",
      source: "",
      recurring: false,
      isVariableAmount: false,
      recurringType: "infinite",
      recurringMonths: undefined,
      recurringEndDate: undefined,
    });
  }
}, [isOpen]);

(Adapte conforme o seu formData atual)

‚úÖ Tecnologias usadas: React, Firebase Firestore.

O objetivo √©:

1. Garantir que transa√ß√µes com recorr√™ncia infinita continuem aparecendo nos pr√≥ximos meses indefinidamente.

2. Garantir que o modal de nova transa√ß√£o abra sempre limpo, sem manter dados da √∫ltima transa√ß√£o. 